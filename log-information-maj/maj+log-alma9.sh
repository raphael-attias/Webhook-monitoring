#!/bin/bash

# V√©rification de la pr√©sence du fichier de configuration
if [ ! -f "$HOME/.config/webhook_url" ]; then
    echo "Erreur : Le fichier de configuration pour le webhook est manquant."
    exit 1
fi

# R√©cup√©rer l'URL du Webhook depuis le fichier de configuration
WEBHOOK_URL=$(cat "$HOME/.config/webhook_url")

# Fonction pour envoyer des messages via Discord de mani√®re s√©curis√©e
send_message() {
    local message=$1
    local machine_name=$2
    # √âviter les injections de commandes en encodant les caract√®res sp√©ciaux
    local safe_message=$(echo "$message" | sed 's/"/\\"/g' | sed "s/\$/\\\$/g")
    curl -X POST -H "Content-Type: application/json" \
         -d "{\"content\": \"[${machine_name}] ${safe_message}\"}" \
         "$WEBHOOK_URL"
}

# Fonction pour effectuer les mises √† jour
perform_update() {
    send_message "üîÑ D√©but de la mise √† jour sur ${MACHINE_NAME}..." "$MACHINE_NAME"

    # Mise √† jour AlmaLinux (sans v√©rification)
    dnf -y update
    # Capturer le code de sortie et effectuer un traitement d'erreur
    local update_exit_code=$?

    # Envoi du message de succ√®s ou d'√©chec bas√© sur le code de sortie
    if [ $update_exit_code -eq 0 ]; then
        send_message ":white_check_mark: Les mises √† jour ont r√©ussi sur ${MACHINE_NAME}." "$MACHINE_NAME"
    else
        send_message ":x: Erreur de mise √† jour sur ${MACHINE_NAME}. Code d'erreur : $update_exit_code" "$MACHINE_NAME"
    fi
}

# Nom de la machine
MACHINE_NAME=$(hostname)

# Appel de la fonction de mise √† jour
perform_update
